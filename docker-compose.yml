version: '3.8'

services:
  postgres:
    image: postgis/postgis:14-3.4
    environment:
      - POSTGRES_DB=geolab
      - POSTGRES_USER=geolab_user
      - POSTGRES_PASSWORD=geolab_pass
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U geolab_user -d geolab"]
      interval: 10s      
      timeout: 5s
      retries: 5

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.4
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - es_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    healthcheck:
      test: ["CMD-SHELL", "curl --silent --fail localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_DB=geolab
      - POSTGRES_USER=geolab_user
      - POSTGRES_PASSWORD=geolab_pass
      - ELASTICSEARCH_HOST=http://elasticsearch:9200
    depends_on:
      postgres:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    volumes:
      - ./api/src:/app
      - ./api/mappings:/app/mappings
    healthcheck:
      test: ["CMD-SHELL", "curl --silent --fail localhost:5000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  nginx:
    image: nginx:1.25
    ports:
      - "80:80"
    volumes:
      - ./web:/usr/share/nginx/html
      - ./web/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api
    # healthcheck:
    #   test: ["CMD-SHELL", "curl --silent --fail localhost:80 || exit 1"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 5

volumes:
  postgres_data:
  es_data: